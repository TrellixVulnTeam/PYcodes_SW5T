from pylab import plot, show, savefig, xlim, figure, \
                hold, ylim, legend, boxplot, setp, axes

# function for setting the colors of the box plots pairs
def setBoxColors(bp):
    setp(bp['boxes'][0], color='black')
    setp(bp['caps'][0], color='black')
    setp(bp['caps'][1], color='black')
    setp(bp['whiskers'][0], color='black')
    setp(bp['whiskers'][1], color='black')
    setp(bp['fliers'][0], color='black')
    setp(bp['fliers'][1], color='black')
    setp(bp['medians'][0], color='black')

    setp(bp['boxes'][1], color='red')
    setp(bp['caps'][2], color='red')
    setp(bp['caps'][3], color='red')
    setp(bp['whiskers'][2], color='red')
    setp(bp['whiskers'][3], color='red')
    setp(bp['fliers'][2], color='red')
    setp(bp['fliers'][3], color='red')
    setp(bp['medians'][1], color='red')

# Some fake data to plot
A= [[1, 2, 5,],  [7, 2]]
B = [[5, 7, 2, 2, 5], [7, 2, 5]]
C = [[3,2,5,7], [6, 7, 3]]



data = [[0.60172988459303922, 0.60243497999732198, 0.59728711356016506, 0.60146725851424032, 0.60194551313250444, 0.60293204411709334, 0.60120188256910456, 0.60307743877936704, 0.60286985584948394, 0.59994832559672251, 0.60170871607014931, 0.60147343992961044, 0.59987634601898732, 0.60256582947938531, 0.59993885515409362, 0.60058096588365506, 0.60189944680034813, 0.60268361448009078, 0.60135319553753031, 0.60540153840154609, 0.60189010275354315, 0.60362246725264734, 0.60171276069524482, 0.60476882568839729, 0.59738592658553535, 0.60083287217979486, 0.60261711145040242, 0.60203567121467827, 0.60108763889455874, 0.60533163635522347, 0.60221986121308513, 0.60203341341743166, 0.60260611005009024, 0.60377254255887713, 0.60201726254593102, 0.60205831857349368, 0.60419976063113479, 0.6019790077332472, 0.60162724073484064, 0.60159067087324325],
        [0.6044846541395863, 0.60406664960188516, 0.60219283872307794, 0.60271067447565274, 0.60210931811148838, 0.60193198705050954, 0.60259218848467111, 0.6025069299667376, 0.60278742828323395, 0.60465729402753832, 0.60287397754633376, 0.60163194672937514, 0.60096232429925278, 0.60103967038329043, 0.6030014444651105, 0.60167041437345425, 0.60074201270541883, 0.60420485020582215, 0.60355686247375717, 0.60368177795569145, 0.60215369409041675, 0.60384718695487594, 0.6044064154236054, 0.60047827727240988, 0.60248517574797822, 0.60168024673624254, 0.60265192829242575, 0.60579348256043442, 0.60242934625035738, 0.6024986870728144, 0.60023398586944865, 0.60343365621744527, 0.59914057666876597, 0.6008809889430905, 0.60241849639798906, 0.59769739700002666, 0.60396806765426891, 0.60345087993702895, 0.60561687052408764, 0.60453992840375792]]


fig = figure()
ax = axes()
hold(True)

# first boxplot pair
bp = boxplot(data, positions = [1, 2], widths = 0.6, notch=True)
setBoxColors(bp)

# second boxplot pair
#bp = boxplot(B, positions = [4, 5], widths = 0.6)
#setBoxColors(bp)

# thrid boxplot pair
#bp = boxplot(C, positions = [7, 8], widths = 0.6)
#setBoxColors(bp)

# set axes limits and labels
xlim(0,9)
ylim(0.58,0.61)
ax.set_xticklabels(['A', 'B', 'C'])
ax.set_xticks([1.5, 4.5, 7.5])

# draw temporary red and blue lines and use them to create a legend
hB, = plot([1,1],'y-')
hR, = plot([1,1],'r-')
legend((hB, hR),('NSGA-II', 'SPEA-2'))
hB.set_visible(False)
hR.set_visible(False)
savefig('boxcompare.png')
show()
