// Agent jumboA in project Bobinas.mas2j

/* Initial beliefs and rules */
//sua posicao no mapa
pos(c,3).
//seu estado: disponivel ou indisponivel
estado(jumboA, disponivel).
//meta Jumbo
meta(0).

/* Initial goals */


/* Plans */
//reporta a sua posicao no mapa
+posicao[source(A)] 
  <- ?pos(X,Y);
     .send(A,tell,pos(X,Y));
	 .print(pos(X,Y));
	 -posicao.
	 
//reporta seu estado
+disponibilidade[source(A)] 
  <- ?disponivel(X);
  	 .send(A,tell,disponivel(X));
	 .print(disponivel(X));
	 -disponibilidade[source(A)].
	 
//ir para o ponto ORIGEM
+!ir(X) <-
			?pos(Z,Y)[source(A)];
			-pos(Z,Y)[source(A)];
			+X;
			.concat("Estou em (x,y): ",X,I);
			.print(I).

//levar bobina de origem para destino
+!levar(X,Y) <- 
				//update no status
				-+estado(jumboA,indisponivel);
				//pegar posicao X
				.send(X,askOne,pos(I,J),A);
				//+A;
				//pegar posicao Y
				.send(Y,askOne,pos(K,L),B);
				//+B;
				//ir X
				!ir(A);
				//wait - tempo pra ir
				.wait(2000);
				//pedir bobina (decrementa numero bobinas)
				.send(X,tell,decrementa);
				//ir Y
				!ir(B);
				//wait - tempo pra ir
				.wait(2000);
				//entregar bobina (incrementa numero bobinas)
				.send(Y,tell,incrementa);
				//Atualiza meta
				?meta(M);
				-+meta(M+20);
				//muda seu status
				-+estado(jumboA,disponivel);
				.concat("Meta: ",M+20,P);
				.print(P);
				.print("Bobina Entregue!").
				//atualiza sua posicao
				//posicao ja atualizada

